Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    with

Grammar

Rule 0     S' -> statement
Rule 1     statement -> assert expression
Rule 2     expression -> let NAME ASS expression
Rule 3     expression -> NAME
Rule 4     expression -> expression in expression
Rule 5     expression -> expression EQ expression
Rule 6     expression -> ( expression )
Rule 7     expression -> NUMBER
Rule 8     expression -> HEX
Rule 9     expression -> BIN
Rule 10    expression -> expression [ expression COLON expression ]
Rule 11    expression -> expression [ expression ]
Rule 12    expression -> not expression
Rule 13    expression -> expression AND expression
Rule 14    expression -> expression OR expression
Rule 15    expression -> expression CONCAT expression
Rule 16    expression -> bvlt ( expression COMMA expression )
Rule 17    expression -> bvle ( expression COMMA expression )

Terminals, with rules where they appear

(                    : 6 16 17
)                    : 6 16 17
AND                  : 13
ASS                  : 2
BIN                  : 9
COLON                : 10
COMMA                : 16 17
CONCAT               : 15
EQ                   : 5
HEX                  : 8
NAME                 : 2 3
NUMBER               : 7
OR                   : 14
[                    : 10 11
]                    : 10 11
assert               : 1
bvle                 : 17
bvlt                 : 16
error                : 
in                   : 4
let                  : 2
not                  : 12
with                 : 

Nonterminals, with rules where they appear

expression           : 1 2 4 4 5 5 6 10 10 10 11 11 12 13 13 14 14 15 15 16 16 17 17
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . assert expression

    assert          shift and go to state 1

    statement                      shift and go to state 2

state 1

    (1) statement -> assert . expression
    (2) expression -> . let NAME ASS expression
    (3) expression -> . NAME
    (4) expression -> . expression in expression
    (5) expression -> . expression EQ expression
    (6) expression -> . ( expression )
    (7) expression -> . NUMBER
    (8) expression -> . HEX
    (9) expression -> . BIN
    (10) expression -> . expression [ expression COLON expression ]
    (11) expression -> . expression [ expression ]
    (12) expression -> . not expression
    (13) expression -> . expression AND expression
    (14) expression -> . expression OR expression
    (15) expression -> . expression CONCAT expression
    (16) expression -> . bvlt ( expression COMMA expression )
    (17) expression -> . bvle ( expression COMMA expression )

    let             shift and go to state 8
    NAME            shift and go to state 10
    (               shift and go to state 11
    NUMBER          shift and go to state 3
    HEX             shift and go to state 7
    BIN             shift and go to state 6
    not             shift and go to state 9
    bvlt            shift and go to state 4
    bvle            shift and go to state 5

    expression                     shift and go to state 12

state 2

    (0) S' -> statement .



state 3

    (7) expression -> NUMBER .

    in              reduce using rule 7 (expression -> NUMBER .)
    EQ              reduce using rule 7 (expression -> NUMBER .)
    [               reduce using rule 7 (expression -> NUMBER .)
    AND             reduce using rule 7 (expression -> NUMBER .)
    OR              reduce using rule 7 (expression -> NUMBER .)
    CONCAT          reduce using rule 7 (expression -> NUMBER .)
    $end            reduce using rule 7 (expression -> NUMBER .)
    )               reduce using rule 7 (expression -> NUMBER .)
    COMMA           reduce using rule 7 (expression -> NUMBER .)
    COLON           reduce using rule 7 (expression -> NUMBER .)
    ]               reduce using rule 7 (expression -> NUMBER .)


state 4

    (16) expression -> bvlt . ( expression COMMA expression )

    (               shift and go to state 13


state 5

    (17) expression -> bvle . ( expression COMMA expression )

    (               shift and go to state 14


state 6

    (9) expression -> BIN .

    in              reduce using rule 9 (expression -> BIN .)
    EQ              reduce using rule 9 (expression -> BIN .)
    [               reduce using rule 9 (expression -> BIN .)
    AND             reduce using rule 9 (expression -> BIN .)
    OR              reduce using rule 9 (expression -> BIN .)
    CONCAT          reduce using rule 9 (expression -> BIN .)
    $end            reduce using rule 9 (expression -> BIN .)
    )               reduce using rule 9 (expression -> BIN .)
    COMMA           reduce using rule 9 (expression -> BIN .)
    COLON           reduce using rule 9 (expression -> BIN .)
    ]               reduce using rule 9 (expression -> BIN .)


state 7

    (8) expression -> HEX .

    in              reduce using rule 8 (expression -> HEX .)
    EQ              reduce using rule 8 (expression -> HEX .)
    [               reduce using rule 8 (expression -> HEX .)
    AND             reduce using rule 8 (expression -> HEX .)
    OR              reduce using rule 8 (expression -> HEX .)
    CONCAT          reduce using rule 8 (expression -> HEX .)
    $end            reduce using rule 8 (expression -> HEX .)
    )               reduce using rule 8 (expression -> HEX .)
    COMMA           reduce using rule 8 (expression -> HEX .)
    COLON           reduce using rule 8 (expression -> HEX .)
    ]               reduce using rule 8 (expression -> HEX .)


state 8

    (2) expression -> let . NAME ASS expression

    NAME            shift and go to state 15


state 9

    (12) expression -> not . expression
    (2) expression -> . let NAME ASS expression
    (3) expression -> . NAME
    (4) expression -> . expression in expression
    (5) expression -> . expression EQ expression
    (6) expression -> . ( expression )
    (7) expression -> . NUMBER
    (8) expression -> . HEX
    (9) expression -> . BIN
    (10) expression -> . expression [ expression COLON expression ]
    (11) expression -> . expression [ expression ]
    (12) expression -> . not expression
    (13) expression -> . expression AND expression
    (14) expression -> . expression OR expression
    (15) expression -> . expression CONCAT expression
    (16) expression -> . bvlt ( expression COMMA expression )
    (17) expression -> . bvle ( expression COMMA expression )

    let             shift and go to state 8
    NAME            shift and go to state 10
    (               shift and go to state 11
    NUMBER          shift and go to state 3
    HEX             shift and go to state 7
    BIN             shift and go to state 6
    not             shift and go to state 9
    bvlt            shift and go to state 4
    bvle            shift and go to state 5

    expression                     shift and go to state 16

state 10

    (3) expression -> NAME .

    in              reduce using rule 3 (expression -> NAME .)
    EQ              reduce using rule 3 (expression -> NAME .)
    [               reduce using rule 3 (expression -> NAME .)
    AND             reduce using rule 3 (expression -> NAME .)
    OR              reduce using rule 3 (expression -> NAME .)
    CONCAT          reduce using rule 3 (expression -> NAME .)
    $end            reduce using rule 3 (expression -> NAME .)
    )               reduce using rule 3 (expression -> NAME .)
    COMMA           reduce using rule 3 (expression -> NAME .)
    COLON           reduce using rule 3 (expression -> NAME .)
    ]               reduce using rule 3 (expression -> NAME .)


state 11

    (6) expression -> ( . expression )
    (2) expression -> . let NAME ASS expression
    (3) expression -> . NAME
    (4) expression -> . expression in expression
    (5) expression -> . expression EQ expression
    (6) expression -> . ( expression )
    (7) expression -> . NUMBER
    (8) expression -> . HEX
    (9) expression -> . BIN
    (10) expression -> . expression [ expression COLON expression ]
    (11) expression -> . expression [ expression ]
    (12) expression -> . not expression
    (13) expression -> . expression AND expression
    (14) expression -> . expression OR expression
    (15) expression -> . expression CONCAT expression
    (16) expression -> . bvlt ( expression COMMA expression )
    (17) expression -> . bvle ( expression COMMA expression )

    let             shift and go to state 8
    NAME            shift and go to state 10
    (               shift and go to state 11
    NUMBER          shift and go to state 3
    HEX             shift and go to state 7
    BIN             shift and go to state 6
    not             shift and go to state 9
    bvlt            shift and go to state 4
    bvle            shift and go to state 5

    expression                     shift and go to state 17

state 12

    (1) statement -> assert expression .
    (4) expression -> expression . in expression
    (5) expression -> expression . EQ expression
    (10) expression -> expression . [ expression COLON expression ]
    (11) expression -> expression . [ expression ]
    (13) expression -> expression . AND expression
    (14) expression -> expression . OR expression
    (15) expression -> expression . CONCAT expression

    $end            reduce using rule 1 (statement -> assert expression .)
    in              shift and go to state 19
    EQ              shift and go to state 21
    [               shift and go to state 20
    AND             shift and go to state 18
    OR              shift and go to state 22
    CONCAT          shift and go to state 23


state 13

    (16) expression -> bvlt ( . expression COMMA expression )
    (2) expression -> . let NAME ASS expression
    (3) expression -> . NAME
    (4) expression -> . expression in expression
    (5) expression -> . expression EQ expression
    (6) expression -> . ( expression )
    (7) expression -> . NUMBER
    (8) expression -> . HEX
    (9) expression -> . BIN
    (10) expression -> . expression [ expression COLON expression ]
    (11) expression -> . expression [ expression ]
    (12) expression -> . not expression
    (13) expression -> . expression AND expression
    (14) expression -> . expression OR expression
    (15) expression -> . expression CONCAT expression
    (16) expression -> . bvlt ( expression COMMA expression )
    (17) expression -> . bvle ( expression COMMA expression )

    let             shift and go to state 8
    NAME            shift and go to state 10
    (               shift and go to state 11
    NUMBER          shift and go to state 3
    HEX             shift and go to state 7
    BIN             shift and go to state 6
    not             shift and go to state 9
    bvlt            shift and go to state 4
    bvle            shift and go to state 5

    expression                     shift and go to state 24

state 14

    (17) expression -> bvle ( . expression COMMA expression )
    (2) expression -> . let NAME ASS expression
    (3) expression -> . NAME
    (4) expression -> . expression in expression
    (5) expression -> . expression EQ expression
    (6) expression -> . ( expression )
    (7) expression -> . NUMBER
    (8) expression -> . HEX
    (9) expression -> . BIN
    (10) expression -> . expression [ expression COLON expression ]
    (11) expression -> . expression [ expression ]
    (12) expression -> . not expression
    (13) expression -> . expression AND expression
    (14) expression -> . expression OR expression
    (15) expression -> . expression CONCAT expression
    (16) expression -> . bvlt ( expression COMMA expression )
    (17) expression -> . bvle ( expression COMMA expression )

    let             shift and go to state 8
    NAME            shift and go to state 10
    (               shift and go to state 11
    NUMBER          shift and go to state 3
    HEX             shift and go to state 7
    BIN             shift and go to state 6
    not             shift and go to state 9
    bvlt            shift and go to state 4
    bvle            shift and go to state 5

    expression                     shift and go to state 25

state 15

    (2) expression -> let NAME . ASS expression

    ASS             shift and go to state 26


state 16

    (12) expression -> not expression .
    (4) expression -> expression . in expression
    (5) expression -> expression . EQ expression
    (10) expression -> expression . [ expression COLON expression ]
    (11) expression -> expression . [ expression ]
    (13) expression -> expression . AND expression
    (14) expression -> expression . OR expression
    (15) expression -> expression . CONCAT expression

  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for CONCAT resolved as shift
    $end            reduce using rule 12 (expression -> not expression .)
    )               reduce using rule 12 (expression -> not expression .)
    COMMA           reduce using rule 12 (expression -> not expression .)
    COLON           reduce using rule 12 (expression -> not expression .)
    ]               reduce using rule 12 (expression -> not expression .)
    in              shift and go to state 19
    EQ              shift and go to state 21
    [               shift and go to state 20
    AND             shift and go to state 18
    OR              shift and go to state 22
    CONCAT          shift and go to state 23

  ! in              [ reduce using rule 12 (expression -> not expression .) ]
  ! EQ              [ reduce using rule 12 (expression -> not expression .) ]
  ! [               [ reduce using rule 12 (expression -> not expression .) ]
  ! AND             [ reduce using rule 12 (expression -> not expression .) ]
  ! OR              [ reduce using rule 12 (expression -> not expression .) ]
  ! CONCAT          [ reduce using rule 12 (expression -> not expression .) ]


state 17

    (6) expression -> ( expression . )
    (4) expression -> expression . in expression
    (5) expression -> expression . EQ expression
    (10) expression -> expression . [ expression COLON expression ]
    (11) expression -> expression . [ expression ]
    (13) expression -> expression . AND expression
    (14) expression -> expression . OR expression
    (15) expression -> expression . CONCAT expression

    )               shift and go to state 27
    in              shift and go to state 19
    EQ              shift and go to state 21
    [               shift and go to state 20
    AND             shift and go to state 18
    OR              shift and go to state 22
    CONCAT          shift and go to state 23


state 18

    (13) expression -> expression AND . expression
    (2) expression -> . let NAME ASS expression
    (3) expression -> . NAME
    (4) expression -> . expression in expression
    (5) expression -> . expression EQ expression
    (6) expression -> . ( expression )
    (7) expression -> . NUMBER
    (8) expression -> . HEX
    (9) expression -> . BIN
    (10) expression -> . expression [ expression COLON expression ]
    (11) expression -> . expression [ expression ]
    (12) expression -> . not expression
    (13) expression -> . expression AND expression
    (14) expression -> . expression OR expression
    (15) expression -> . expression CONCAT expression
    (16) expression -> . bvlt ( expression COMMA expression )
    (17) expression -> . bvle ( expression COMMA expression )

    let             shift and go to state 8
    NAME            shift and go to state 10
    (               shift and go to state 11
    NUMBER          shift and go to state 3
    HEX             shift and go to state 7
    BIN             shift and go to state 6
    not             shift and go to state 9
    bvlt            shift and go to state 4
    bvle            shift and go to state 5

    expression                     shift and go to state 28

state 19

    (4) expression -> expression in . expression
    (2) expression -> . let NAME ASS expression
    (3) expression -> . NAME
    (4) expression -> . expression in expression
    (5) expression -> . expression EQ expression
    (6) expression -> . ( expression )
    (7) expression -> . NUMBER
    (8) expression -> . HEX
    (9) expression -> . BIN
    (10) expression -> . expression [ expression COLON expression ]
    (11) expression -> . expression [ expression ]
    (12) expression -> . not expression
    (13) expression -> . expression AND expression
    (14) expression -> . expression OR expression
    (15) expression -> . expression CONCAT expression
    (16) expression -> . bvlt ( expression COMMA expression )
    (17) expression -> . bvle ( expression COMMA expression )

    let             shift and go to state 8
    NAME            shift and go to state 10
    (               shift and go to state 11
    NUMBER          shift and go to state 3
    HEX             shift and go to state 7
    BIN             shift and go to state 6
    not             shift and go to state 9
    bvlt            shift and go to state 4
    bvle            shift and go to state 5

    expression                     shift and go to state 29

state 20

    (10) expression -> expression [ . expression COLON expression ]
    (11) expression -> expression [ . expression ]
    (2) expression -> . let NAME ASS expression
    (3) expression -> . NAME
    (4) expression -> . expression in expression
    (5) expression -> . expression EQ expression
    (6) expression -> . ( expression )
    (7) expression -> . NUMBER
    (8) expression -> . HEX
    (9) expression -> . BIN
    (10) expression -> . expression [ expression COLON expression ]
    (11) expression -> . expression [ expression ]
    (12) expression -> . not expression
    (13) expression -> . expression AND expression
    (14) expression -> . expression OR expression
    (15) expression -> . expression CONCAT expression
    (16) expression -> . bvlt ( expression COMMA expression )
    (17) expression -> . bvle ( expression COMMA expression )

    let             shift and go to state 8
    NAME            shift and go to state 10
    (               shift and go to state 11
    NUMBER          shift and go to state 3
    HEX             shift and go to state 7
    BIN             shift and go to state 6
    not             shift and go to state 9
    bvlt            shift and go to state 4
    bvle            shift and go to state 5

    expression                     shift and go to state 30

state 21

    (5) expression -> expression EQ . expression
    (2) expression -> . let NAME ASS expression
    (3) expression -> . NAME
    (4) expression -> . expression in expression
    (5) expression -> . expression EQ expression
    (6) expression -> . ( expression )
    (7) expression -> . NUMBER
    (8) expression -> . HEX
    (9) expression -> . BIN
    (10) expression -> . expression [ expression COLON expression ]
    (11) expression -> . expression [ expression ]
    (12) expression -> . not expression
    (13) expression -> . expression AND expression
    (14) expression -> . expression OR expression
    (15) expression -> . expression CONCAT expression
    (16) expression -> . bvlt ( expression COMMA expression )
    (17) expression -> . bvle ( expression COMMA expression )

    let             shift and go to state 8
    NAME            shift and go to state 10
    (               shift and go to state 11
    NUMBER          shift and go to state 3
    HEX             shift and go to state 7
    BIN             shift and go to state 6
    not             shift and go to state 9
    bvlt            shift and go to state 4
    bvle            shift and go to state 5

    expression                     shift and go to state 31

state 22

    (14) expression -> expression OR . expression
    (2) expression -> . let NAME ASS expression
    (3) expression -> . NAME
    (4) expression -> . expression in expression
    (5) expression -> . expression EQ expression
    (6) expression -> . ( expression )
    (7) expression -> . NUMBER
    (8) expression -> . HEX
    (9) expression -> . BIN
    (10) expression -> . expression [ expression COLON expression ]
    (11) expression -> . expression [ expression ]
    (12) expression -> . not expression
    (13) expression -> . expression AND expression
    (14) expression -> . expression OR expression
    (15) expression -> . expression CONCAT expression
    (16) expression -> . bvlt ( expression COMMA expression )
    (17) expression -> . bvle ( expression COMMA expression )

    let             shift and go to state 8
    NAME            shift and go to state 10
    (               shift and go to state 11
    NUMBER          shift and go to state 3
    HEX             shift and go to state 7
    BIN             shift and go to state 6
    not             shift and go to state 9
    bvlt            shift and go to state 4
    bvle            shift and go to state 5

    expression                     shift and go to state 32

state 23

    (15) expression -> expression CONCAT . expression
    (2) expression -> . let NAME ASS expression
    (3) expression -> . NAME
    (4) expression -> . expression in expression
    (5) expression -> . expression EQ expression
    (6) expression -> . ( expression )
    (7) expression -> . NUMBER
    (8) expression -> . HEX
    (9) expression -> . BIN
    (10) expression -> . expression [ expression COLON expression ]
    (11) expression -> . expression [ expression ]
    (12) expression -> . not expression
    (13) expression -> . expression AND expression
    (14) expression -> . expression OR expression
    (15) expression -> . expression CONCAT expression
    (16) expression -> . bvlt ( expression COMMA expression )
    (17) expression -> . bvle ( expression COMMA expression )

    let             shift and go to state 8
    NAME            shift and go to state 10
    (               shift and go to state 11
    NUMBER          shift and go to state 3
    HEX             shift and go to state 7
    BIN             shift and go to state 6
    not             shift and go to state 9
    bvlt            shift and go to state 4
    bvle            shift and go to state 5

    expression                     shift and go to state 33

state 24

    (16) expression -> bvlt ( expression . COMMA expression )
    (4) expression -> expression . in expression
    (5) expression -> expression . EQ expression
    (10) expression -> expression . [ expression COLON expression ]
    (11) expression -> expression . [ expression ]
    (13) expression -> expression . AND expression
    (14) expression -> expression . OR expression
    (15) expression -> expression . CONCAT expression

    COMMA           shift and go to state 34
    in              shift and go to state 19
    EQ              shift and go to state 21
    [               shift and go to state 20
    AND             shift and go to state 18
    OR              shift and go to state 22
    CONCAT          shift and go to state 23


state 25

    (17) expression -> bvle ( expression . COMMA expression )
    (4) expression -> expression . in expression
    (5) expression -> expression . EQ expression
    (10) expression -> expression . [ expression COLON expression ]
    (11) expression -> expression . [ expression ]
    (13) expression -> expression . AND expression
    (14) expression -> expression . OR expression
    (15) expression -> expression . CONCAT expression

    COMMA           shift and go to state 35
    in              shift and go to state 19
    EQ              shift and go to state 21
    [               shift and go to state 20
    AND             shift and go to state 18
    OR              shift and go to state 22
    CONCAT          shift and go to state 23


state 26

    (2) expression -> let NAME ASS . expression
    (2) expression -> . let NAME ASS expression
    (3) expression -> . NAME
    (4) expression -> . expression in expression
    (5) expression -> . expression EQ expression
    (6) expression -> . ( expression )
    (7) expression -> . NUMBER
    (8) expression -> . HEX
    (9) expression -> . BIN
    (10) expression -> . expression [ expression COLON expression ]
    (11) expression -> . expression [ expression ]
    (12) expression -> . not expression
    (13) expression -> . expression AND expression
    (14) expression -> . expression OR expression
    (15) expression -> . expression CONCAT expression
    (16) expression -> . bvlt ( expression COMMA expression )
    (17) expression -> . bvle ( expression COMMA expression )

    let             shift and go to state 8
    NAME            shift and go to state 10
    (               shift and go to state 11
    NUMBER          shift and go to state 3
    HEX             shift and go to state 7
    BIN             shift and go to state 6
    not             shift and go to state 9
    bvlt            shift and go to state 4
    bvle            shift and go to state 5

    expression                     shift and go to state 36

state 27

    (6) expression -> ( expression ) .

    in              reduce using rule 6 (expression -> ( expression ) .)
    EQ              reduce using rule 6 (expression -> ( expression ) .)
    [               reduce using rule 6 (expression -> ( expression ) .)
    AND             reduce using rule 6 (expression -> ( expression ) .)
    OR              reduce using rule 6 (expression -> ( expression ) .)
    CONCAT          reduce using rule 6 (expression -> ( expression ) .)
    $end            reduce using rule 6 (expression -> ( expression ) .)
    )               reduce using rule 6 (expression -> ( expression ) .)
    COMMA           reduce using rule 6 (expression -> ( expression ) .)
    COLON           reduce using rule 6 (expression -> ( expression ) .)
    ]               reduce using rule 6 (expression -> ( expression ) .)


state 28

    (13) expression -> expression AND expression .
    (4) expression -> expression . in expression
    (5) expression -> expression . EQ expression
    (10) expression -> expression . [ expression COLON expression ]
    (11) expression -> expression . [ expression ]
    (13) expression -> expression . AND expression
    (14) expression -> expression . OR expression
    (15) expression -> expression . CONCAT expression

    in              reduce using rule 13 (expression -> expression AND expression .)
    EQ              reduce using rule 13 (expression -> expression AND expression .)
    AND             reduce using rule 13 (expression -> expression AND expression .)
    OR              reduce using rule 13 (expression -> expression AND expression .)
    CONCAT          reduce using rule 13 (expression -> expression AND expression .)
    $end            reduce using rule 13 (expression -> expression AND expression .)
    )               reduce using rule 13 (expression -> expression AND expression .)
    COMMA           reduce using rule 13 (expression -> expression AND expression .)
    COLON           reduce using rule 13 (expression -> expression AND expression .)
    ]               reduce using rule 13 (expression -> expression AND expression .)
    [               shift and go to state 20

  ! [               [ reduce using rule 13 (expression -> expression AND expression .) ]
  ! in              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 21 ]
  ! AND             [ shift and go to state 18 ]
  ! OR              [ shift and go to state 22 ]
  ! CONCAT          [ shift and go to state 23 ]


state 29

    (4) expression -> expression in expression .
    (4) expression -> expression . in expression
    (5) expression -> expression . EQ expression
    (10) expression -> expression . [ expression COLON expression ]
    (11) expression -> expression . [ expression ]
    (13) expression -> expression . AND expression
    (14) expression -> expression . OR expression
    (15) expression -> expression . CONCAT expression

  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for CONCAT resolved as shift
    $end            reduce using rule 4 (expression -> expression in expression .)
    )               reduce using rule 4 (expression -> expression in expression .)
    COMMA           reduce using rule 4 (expression -> expression in expression .)
    COLON           reduce using rule 4 (expression -> expression in expression .)
    ]               reduce using rule 4 (expression -> expression in expression .)
    in              shift and go to state 19
    EQ              shift and go to state 21
    [               shift and go to state 20
    AND             shift and go to state 18
    OR              shift and go to state 22
    CONCAT          shift and go to state 23

  ! in              [ reduce using rule 4 (expression -> expression in expression .) ]
  ! EQ              [ reduce using rule 4 (expression -> expression in expression .) ]
  ! [               [ reduce using rule 4 (expression -> expression in expression .) ]
  ! AND             [ reduce using rule 4 (expression -> expression in expression .) ]
  ! OR              [ reduce using rule 4 (expression -> expression in expression .) ]
  ! CONCAT          [ reduce using rule 4 (expression -> expression in expression .) ]


state 30

    (10) expression -> expression [ expression . COLON expression ]
    (11) expression -> expression [ expression . ]
    (4) expression -> expression . in expression
    (5) expression -> expression . EQ expression
    (10) expression -> expression . [ expression COLON expression ]
    (11) expression -> expression . [ expression ]
    (13) expression -> expression . AND expression
    (14) expression -> expression . OR expression
    (15) expression -> expression . CONCAT expression

    COLON           shift and go to state 38
    ]               shift and go to state 37
    in              shift and go to state 19
    EQ              shift and go to state 21
    [               shift and go to state 20
    AND             shift and go to state 18
    OR              shift and go to state 22
    CONCAT          shift and go to state 23


state 31

    (5) expression -> expression EQ expression .
    (4) expression -> expression . in expression
    (5) expression -> expression . EQ expression
    (10) expression -> expression . [ expression COLON expression ]
    (11) expression -> expression . [ expression ]
    (13) expression -> expression . AND expression
    (14) expression -> expression . OR expression
    (15) expression -> expression . CONCAT expression

    in              reduce using rule 5 (expression -> expression EQ expression .)
    EQ              reduce using rule 5 (expression -> expression EQ expression .)
    AND             reduce using rule 5 (expression -> expression EQ expression .)
    OR              reduce using rule 5 (expression -> expression EQ expression .)
    CONCAT          reduce using rule 5 (expression -> expression EQ expression .)
    $end            reduce using rule 5 (expression -> expression EQ expression .)
    )               reduce using rule 5 (expression -> expression EQ expression .)
    COMMA           reduce using rule 5 (expression -> expression EQ expression .)
    COLON           reduce using rule 5 (expression -> expression EQ expression .)
    ]               reduce using rule 5 (expression -> expression EQ expression .)
    [               shift and go to state 20

  ! [               [ reduce using rule 5 (expression -> expression EQ expression .) ]
  ! in              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 21 ]
  ! AND             [ shift and go to state 18 ]
  ! OR              [ shift and go to state 22 ]
  ! CONCAT          [ shift and go to state 23 ]


state 32

    (14) expression -> expression OR expression .
    (4) expression -> expression . in expression
    (5) expression -> expression . EQ expression
    (10) expression -> expression . [ expression COLON expression ]
    (11) expression -> expression . [ expression ]
    (13) expression -> expression . AND expression
    (14) expression -> expression . OR expression
    (15) expression -> expression . CONCAT expression

    in              reduce using rule 14 (expression -> expression OR expression .)
    EQ              reduce using rule 14 (expression -> expression OR expression .)
    AND             reduce using rule 14 (expression -> expression OR expression .)
    OR              reduce using rule 14 (expression -> expression OR expression .)
    CONCAT          reduce using rule 14 (expression -> expression OR expression .)
    $end            reduce using rule 14 (expression -> expression OR expression .)
    )               reduce using rule 14 (expression -> expression OR expression .)
    COMMA           reduce using rule 14 (expression -> expression OR expression .)
    COLON           reduce using rule 14 (expression -> expression OR expression .)
    ]               reduce using rule 14 (expression -> expression OR expression .)
    [               shift and go to state 20

  ! [               [ reduce using rule 14 (expression -> expression OR expression .) ]
  ! in              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 21 ]
  ! AND             [ shift and go to state 18 ]
  ! OR              [ shift and go to state 22 ]
  ! CONCAT          [ shift and go to state 23 ]


state 33

    (15) expression -> expression CONCAT expression .
    (4) expression -> expression . in expression
    (5) expression -> expression . EQ expression
    (10) expression -> expression . [ expression COLON expression ]
    (11) expression -> expression . [ expression ]
    (13) expression -> expression . AND expression
    (14) expression -> expression . OR expression
    (15) expression -> expression . CONCAT expression

    in              reduce using rule 15 (expression -> expression CONCAT expression .)
    EQ              reduce using rule 15 (expression -> expression CONCAT expression .)
    AND             reduce using rule 15 (expression -> expression CONCAT expression .)
    OR              reduce using rule 15 (expression -> expression CONCAT expression .)
    CONCAT          reduce using rule 15 (expression -> expression CONCAT expression .)
    $end            reduce using rule 15 (expression -> expression CONCAT expression .)
    )               reduce using rule 15 (expression -> expression CONCAT expression .)
    COMMA           reduce using rule 15 (expression -> expression CONCAT expression .)
    COLON           reduce using rule 15 (expression -> expression CONCAT expression .)
    ]               reduce using rule 15 (expression -> expression CONCAT expression .)
    [               shift and go to state 20

  ! [               [ reduce using rule 15 (expression -> expression CONCAT expression .) ]
  ! in              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 21 ]
  ! AND             [ shift and go to state 18 ]
  ! OR              [ shift and go to state 22 ]
  ! CONCAT          [ shift and go to state 23 ]


state 34

    (16) expression -> bvlt ( expression COMMA . expression )
    (2) expression -> . let NAME ASS expression
    (3) expression -> . NAME
    (4) expression -> . expression in expression
    (5) expression -> . expression EQ expression
    (6) expression -> . ( expression )
    (7) expression -> . NUMBER
    (8) expression -> . HEX
    (9) expression -> . BIN
    (10) expression -> . expression [ expression COLON expression ]
    (11) expression -> . expression [ expression ]
    (12) expression -> . not expression
    (13) expression -> . expression AND expression
    (14) expression -> . expression OR expression
    (15) expression -> . expression CONCAT expression
    (16) expression -> . bvlt ( expression COMMA expression )
    (17) expression -> . bvle ( expression COMMA expression )

    let             shift and go to state 8
    NAME            shift and go to state 10
    (               shift and go to state 11
    NUMBER          shift and go to state 3
    HEX             shift and go to state 7
    BIN             shift and go to state 6
    not             shift and go to state 9
    bvlt            shift and go to state 4
    bvle            shift and go to state 5

    expression                     shift and go to state 39

state 35

    (17) expression -> bvle ( expression COMMA . expression )
    (2) expression -> . let NAME ASS expression
    (3) expression -> . NAME
    (4) expression -> . expression in expression
    (5) expression -> . expression EQ expression
    (6) expression -> . ( expression )
    (7) expression -> . NUMBER
    (8) expression -> . HEX
    (9) expression -> . BIN
    (10) expression -> . expression [ expression COLON expression ]
    (11) expression -> . expression [ expression ]
    (12) expression -> . not expression
    (13) expression -> . expression AND expression
    (14) expression -> . expression OR expression
    (15) expression -> . expression CONCAT expression
    (16) expression -> . bvlt ( expression COMMA expression )
    (17) expression -> . bvle ( expression COMMA expression )

    let             shift and go to state 8
    NAME            shift and go to state 10
    (               shift and go to state 11
    NUMBER          shift and go to state 3
    HEX             shift and go to state 7
    BIN             shift and go to state 6
    not             shift and go to state 9
    bvlt            shift and go to state 4
    bvle            shift and go to state 5

    expression                     shift and go to state 40

state 36

    (2) expression -> let NAME ASS expression .
    (4) expression -> expression . in expression
    (5) expression -> expression . EQ expression
    (10) expression -> expression . [ expression COLON expression ]
    (11) expression -> expression . [ expression ]
    (13) expression -> expression . AND expression
    (14) expression -> expression . OR expression
    (15) expression -> expression . CONCAT expression

    in              reduce using rule 2 (expression -> let NAME ASS expression .)
    EQ              reduce using rule 2 (expression -> let NAME ASS expression .)
    [               reduce using rule 2 (expression -> let NAME ASS expression .)
    AND             reduce using rule 2 (expression -> let NAME ASS expression .)
    OR              reduce using rule 2 (expression -> let NAME ASS expression .)
    CONCAT          reduce using rule 2 (expression -> let NAME ASS expression .)
    $end            reduce using rule 2 (expression -> let NAME ASS expression .)
    )               reduce using rule 2 (expression -> let NAME ASS expression .)
    COMMA           reduce using rule 2 (expression -> let NAME ASS expression .)
    COLON           reduce using rule 2 (expression -> let NAME ASS expression .)
    ]               reduce using rule 2 (expression -> let NAME ASS expression .)

  ! in              [ shift and go to state 19 ]
  ! EQ              [ shift and go to state 21 ]
  ! [               [ shift and go to state 20 ]
  ! AND             [ shift and go to state 18 ]
  ! OR              [ shift and go to state 22 ]
  ! CONCAT          [ shift and go to state 23 ]


state 37

    (11) expression -> expression [ expression ] .

    in              reduce using rule 11 (expression -> expression [ expression ] .)
    EQ              reduce using rule 11 (expression -> expression [ expression ] .)
    [               reduce using rule 11 (expression -> expression [ expression ] .)
    AND             reduce using rule 11 (expression -> expression [ expression ] .)
    OR              reduce using rule 11 (expression -> expression [ expression ] .)
    CONCAT          reduce using rule 11 (expression -> expression [ expression ] .)
    $end            reduce using rule 11 (expression -> expression [ expression ] .)
    )               reduce using rule 11 (expression -> expression [ expression ] .)
    COMMA           reduce using rule 11 (expression -> expression [ expression ] .)
    COLON           reduce using rule 11 (expression -> expression [ expression ] .)
    ]               reduce using rule 11 (expression -> expression [ expression ] .)


state 38

    (10) expression -> expression [ expression COLON . expression ]
    (2) expression -> . let NAME ASS expression
    (3) expression -> . NAME
    (4) expression -> . expression in expression
    (5) expression -> . expression EQ expression
    (6) expression -> . ( expression )
    (7) expression -> . NUMBER
    (8) expression -> . HEX
    (9) expression -> . BIN
    (10) expression -> . expression [ expression COLON expression ]
    (11) expression -> . expression [ expression ]
    (12) expression -> . not expression
    (13) expression -> . expression AND expression
    (14) expression -> . expression OR expression
    (15) expression -> . expression CONCAT expression
    (16) expression -> . bvlt ( expression COMMA expression )
    (17) expression -> . bvle ( expression COMMA expression )

    let             shift and go to state 8
    NAME            shift and go to state 10
    (               shift and go to state 11
    NUMBER          shift and go to state 3
    HEX             shift and go to state 7
    BIN             shift and go to state 6
    not             shift and go to state 9
    bvlt            shift and go to state 4
    bvle            shift and go to state 5

    expression                     shift and go to state 41

state 39

    (16) expression -> bvlt ( expression COMMA expression . )
    (4) expression -> expression . in expression
    (5) expression -> expression . EQ expression
    (10) expression -> expression . [ expression COLON expression ]
    (11) expression -> expression . [ expression ]
    (13) expression -> expression . AND expression
    (14) expression -> expression . OR expression
    (15) expression -> expression . CONCAT expression

    )               shift and go to state 42
    in              shift and go to state 19
    EQ              shift and go to state 21
    [               shift and go to state 20
    AND             shift and go to state 18
    OR              shift and go to state 22
    CONCAT          shift and go to state 23


state 40

    (17) expression -> bvle ( expression COMMA expression . )
    (4) expression -> expression . in expression
    (5) expression -> expression . EQ expression
    (10) expression -> expression . [ expression COLON expression ]
    (11) expression -> expression . [ expression ]
    (13) expression -> expression . AND expression
    (14) expression -> expression . OR expression
    (15) expression -> expression . CONCAT expression

    )               shift and go to state 43
    in              shift and go to state 19
    EQ              shift and go to state 21
    [               shift and go to state 20
    AND             shift and go to state 18
    OR              shift and go to state 22
    CONCAT          shift and go to state 23


state 41

    (10) expression -> expression [ expression COLON expression . ]
    (4) expression -> expression . in expression
    (5) expression -> expression . EQ expression
    (10) expression -> expression . [ expression COLON expression ]
    (11) expression -> expression . [ expression ]
    (13) expression -> expression . AND expression
    (14) expression -> expression . OR expression
    (15) expression -> expression . CONCAT expression

    ]               shift and go to state 44
    in              shift and go to state 19
    EQ              shift and go to state 21
    [               shift and go to state 20
    AND             shift and go to state 18
    OR              shift and go to state 22
    CONCAT          shift and go to state 23


state 42

    (16) expression -> bvlt ( expression COMMA expression ) .

    in              reduce using rule 16 (expression -> bvlt ( expression COMMA expression ) .)
    EQ              reduce using rule 16 (expression -> bvlt ( expression COMMA expression ) .)
    [               reduce using rule 16 (expression -> bvlt ( expression COMMA expression ) .)
    AND             reduce using rule 16 (expression -> bvlt ( expression COMMA expression ) .)
    OR              reduce using rule 16 (expression -> bvlt ( expression COMMA expression ) .)
    CONCAT          reduce using rule 16 (expression -> bvlt ( expression COMMA expression ) .)
    $end            reduce using rule 16 (expression -> bvlt ( expression COMMA expression ) .)
    )               reduce using rule 16 (expression -> bvlt ( expression COMMA expression ) .)
    COMMA           reduce using rule 16 (expression -> bvlt ( expression COMMA expression ) .)
    COLON           reduce using rule 16 (expression -> bvlt ( expression COMMA expression ) .)
    ]               reduce using rule 16 (expression -> bvlt ( expression COMMA expression ) .)


state 43

    (17) expression -> bvle ( expression COMMA expression ) .

    in              reduce using rule 17 (expression -> bvle ( expression COMMA expression ) .)
    EQ              reduce using rule 17 (expression -> bvle ( expression COMMA expression ) .)
    [               reduce using rule 17 (expression -> bvle ( expression COMMA expression ) .)
    AND             reduce using rule 17 (expression -> bvle ( expression COMMA expression ) .)
    OR              reduce using rule 17 (expression -> bvle ( expression COMMA expression ) .)
    CONCAT          reduce using rule 17 (expression -> bvle ( expression COMMA expression ) .)
    $end            reduce using rule 17 (expression -> bvle ( expression COMMA expression ) .)
    )               reduce using rule 17 (expression -> bvle ( expression COMMA expression ) .)
    COMMA           reduce using rule 17 (expression -> bvle ( expression COMMA expression ) .)
    COLON           reduce using rule 17 (expression -> bvle ( expression COMMA expression ) .)
    ]               reduce using rule 17 (expression -> bvle ( expression COMMA expression ) .)


state 44

    (10) expression -> expression [ expression COLON expression ] .

    in              reduce using rule 10 (expression -> expression [ expression COLON expression ] .)
    EQ              reduce using rule 10 (expression -> expression [ expression COLON expression ] .)
    [               reduce using rule 10 (expression -> expression [ expression COLON expression ] .)
    AND             reduce using rule 10 (expression -> expression [ expression COLON expression ] .)
    OR              reduce using rule 10 (expression -> expression [ expression COLON expression ] .)
    CONCAT          reduce using rule 10 (expression -> expression [ expression COLON expression ] .)
    $end            reduce using rule 10 (expression -> expression [ expression COLON expression ] .)
    )               reduce using rule 10 (expression -> expression [ expression COLON expression ] .)
    COMMA           reduce using rule 10 (expression -> expression [ expression COLON expression ] .)
    COLON           reduce using rule 10 (expression -> expression [ expression COLON expression ] .)
    ]               reduce using rule 10 (expression -> expression [ expression COLON expression ] .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for in in state 16 resolved as shift
WARNING: shift/reduce conflict for EQ in state 16 resolved as shift
WARNING: shift/reduce conflict for [ in state 16 resolved as shift
WARNING: shift/reduce conflict for AND in state 16 resolved as shift
WARNING: shift/reduce conflict for OR in state 16 resolved as shift
WARNING: shift/reduce conflict for CONCAT in state 16 resolved as shift
WARNING: shift/reduce conflict for in in state 29 resolved as shift
WARNING: shift/reduce conflict for EQ in state 29 resolved as shift
WARNING: shift/reduce conflict for [ in state 29 resolved as shift
WARNING: shift/reduce conflict for AND in state 29 resolved as shift
WARNING: shift/reduce conflict for OR in state 29 resolved as shift
WARNING: shift/reduce conflict for CONCAT in state 29 resolved as shift
